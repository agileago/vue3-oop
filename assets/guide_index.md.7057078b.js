import{_ as s,c as a,o as n,a as e}from"./app.02ce13fa.js";const h=JSON.parse('{"title":"如何使用","description":"","frontmatter":{},"headers":[{"level":2,"title":"前提条件","slug":"前提条件","link":"#前提条件","children":[]},{"level":2,"title":"装饰器","slug":"装饰器","link":"#装饰器","children":[]},{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[]}],"relativePath":"guide/index.md"}'),l={name:"guide/index.md"},o=e(`<h1 id="如何使用" tabindex="-1">如何使用 <a class="header-anchor" href="#如何使用" aria-hidden="true">#</a></h1><h2 id="前提条件" tabindex="-1">前提条件 <a class="header-anchor" href="#前提条件" aria-hidden="true">#</a></h2><ol><li>因为要用到ts的获取元数据的能力，所以需要安装<code>reflect-metada</code>的支持</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">yarn add @abraham/reflection</span></span>
<span class="line"></span></code></pre></div><p>并且把这段代码放到入口引入，只需引入一次</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@abraham/reflection</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><ol start="2"><li>安装依赖注入库 <code>injection-js</code>, 以及本库</li></ol><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">yarn add injection-js vue3-oop</span></span>
<span class="line"></span></code></pre></div><ol start="3"><li>设置 <code>tsconfig.json</code></li></ol><p>主要是涉及到装饰器以及类的设置</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">compilerOptions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">experimentalDecorators</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">emitDecoratorMetadata</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">useDefineForClassFields</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol start="4"><li>Vite设置</li></ol><p>由于vite内部使用esbuild编译ts, esbuild不支持元数据 <code>metadata</code>, 所以需要使用tsc编译ts</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">pnpm add @vue3-oop/plugin-vue-jsx -D</span></span>
<span class="line"></span></code></pre></div><p>vite 插件配置</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> vueJsx </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@vue3-oop/plugin-vue-jsx</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">plugins</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#82AAFF;">vueJsx</span><span style="color:#A6ACCD;">()]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="装饰器" tabindex="-1">装饰器 <a class="header-anchor" href="#装饰器" aria-hidden="true">#</a></h2><p>有关装饰器的知识请阅读 <a href="https://www.typescriptlang.org/docs/handbook/decorators.html#decorators" target="_blank" rel="noreferrer">https://www.typescriptlang.org/docs/handbook/decorators.html#decorators</a></p><h2 id="模板" tabindex="-1">模板 <a class="header-anchor" href="#模板" aria-hidden="true">#</a></h2><p>vite: <a href="https://github.com/agileago/fe-template" target="_blank" rel="noreferrer">https://github.com/agileago/fe-template</a></p><p>webpack: <a href="https://github.com/agileago/fe-vue3-template" target="_blank" rel="noreferrer">https://github.com/agileago/fe-vue3-template</a></p>`,21),p=[o];function t(c,r,i,d,D,y){return n(),a("div",null,p)}const u=s(l,[["render",t]]);export{h as __pageData,u as default};
